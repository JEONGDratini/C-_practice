C#에선 람다식을 표현할 때 => 연산자를 사용한다.

문법 : ( 입력 패러미터 ) => { 실행문장 블럭 };
ex)
() => Write("No"); //입력 패러미터 없을 때

(p) => Write(p); //입력 패러미터 1, 2개있는 경우
(s, e) => { Write(s); Write(e); }

(string s, int i) => Write(s, i); //입력 파라미터 타입 명시하는 경우(입력 패러미터 타입이 모호할 땐 이것을 딱 써줄 수도 있다)

-----------------------------------------------------------------------------------------------------------------

람다식 이용해 delegate와 익명 메서드 간략하게 표현하는 법
ex)
간략화 하기 전.
this.button1.Click += new System.EventHandler(button1_Click);

private void button1_Click(object sender, EventArgs e)
{
	((Button)sender).BackColor = Color.Red;
}

메서드 명만 호출해서 간략화.
this.button1.Click += button1_Click;

private void button1_Click(object sender, EventArgs e)
{
	((Button)sender).BackColor = Color.Red;
}

익명 메서드로 간략화.
this.button1.Click += delegate(object sender, EventArgs e)
{
	((Button)sender).BackColor = Color.Red;
};

람다식으로 간략화
this.button1.Cilck += (sender, e) => ((Button)sender).BackColor = Color.Red;


위의 각 코드들은 다 같은 뜻이다.
 
 
 
 